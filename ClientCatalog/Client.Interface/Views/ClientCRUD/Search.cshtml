@model Client.Interface.Models.ClientClass
@{
    ViewData["Title"] = "Search for a client.";
}

<h1 style="color:midnightblue;">@ViewData["Title"]</h1>

<form id="searchForm">
    <div class="form-group">
        <br /> <br />
        <label for="searchQuery">Please enter the client ID:</label>
        <input type="text" id="searchQuery" name="searchQuery" class="form-control" placeholder="Enter the ID of the desired client." />
    </div>
    <br />
    <br />
    <button type="button" class="btn btn-primary" onclick="searchClient()">Search</button>
</form>

<div id="clientInfo" style="display: none;">
    <table class="table mt-3">
        <thead>
            <tr>
                <th>Nom</th>
                <th>Prénom</th>
                <th>Email</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td id="clientFirstName"></td>
                <td id="clientLastName"></td>
                <td id="clientEmail"></td>
                <td>
                    <a id="modifyButton" class="btn btn-info btn-sm" style="background-color: navy;border: 1px solid navy; color: white;">Update</a>
                    <a id="deleteButton" class="btn btn-danger btn-sm" style="background-color: lightblue;border: 1px solid lightblue; color: white;">Delete</a>
                </td>
            </tr>
        </tbody>
    </table>
</div>

@section Scripts {
    <script type="text/javascript">
        async function searchClient() {
            /*const clientId = document.getElementById('searchQuery').value;
            try {
                const response = await fetch(`/ClientCRUD/Search?searchQuery=${clientId}`);
                if (response.ok) {
                    const client = await response.json();
                    document.getElementById('clientFirstName').textContent = client.firstName;
                    document.getElementById('clientLastName').textContent = client.lastName;
                    document.getElementById('clientEmail').textContent = client.email;
                    document.getElementById('modifyButton').setAttribute('href', `/ClientCRUD/Update?id=${client.id}`);
                    document.getElementById('deleteButton').setAttribute('href', `/ClientCRUD/Delete?id=${client.id}`);
                    document.getElementById('clientInfo').style.display = 'block';
                } else {
                    alert('Client not found.');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('An error occurred while searching for the client.');
            }*/
                const clientId = document.getElementById('searchQuery').value;
                try {
                const response = await fetch(`/ClientCRUD/SearchClient?searchQuery=${clientId}`);
                    if (response.ok) {
                        const client = await response.json();
                        if (client) {
                            document.getElementById('clientFirstName').textContent = client.firstName;
                            document.getElementById('clientLastName').textContent = client.lastName;
                            document.getElementById('clientEmail').textContent = client.email;
                            document.getElementById('modifyButton').setAttribute('href', `/ClientCRUD/Update?id=${client.id}`);
                            document.getElementById('deleteButton').setAttribute('href', `/ClientCRUD/Delete?id=${client.id}`);
                            document.getElementById('clientInfo').style.display = 'block';
                        } else {
                            alert('Client not found.');
                        }
                    } else {
                        alert('Client not found.');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('An error occurred while searching for the client.');
                }
            

        }
    </script>
}
